apiVersion: apps/v1
kind: Deployment
metadata: 
  name: springapp
  namespace: test-ns
spec:
  replicas: 2
  selector:
    matchLabels: 
      app: springapp
  template: 
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec: 
      containers:
      - name: springapp
        image: dockernaveen04/spring-boot:1 
        ports:
        - containerPort: 8080
        resources: 
          requests:
            cpu: 200m
            memory: 128Mi
          limits: 
            cpu: 500m
            memory: 512Mi
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
        volumeMounts:
        - name: mongovol
          mountPath: /data/db
      volumes:
      - name: mongovol
        hostPath: 
          path: /mongodata
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  namespace: test-ns
spec: 
  type: NodePort
  selector: 
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata: 
  name: mongodbrs
  namespace: test-ns
spec: 
  replicas: 1
  selector: 
    matchLabels:
      app: mongo
  template: 
    metadata: 
      name: mongodbpod
      labels: 
        app: mongo
    spec:
      containers:
      - name: mongodbcontainer
        image: mongo
        ports:
        - containerPort: 27017
        env: 
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata: 
  name: mongo
  namespace: test-ns
spec: 
  type: ClusterIP
  selector: 
    app: mongosvc
  ports: 
  - port: 27017
    targetPort: 27017
